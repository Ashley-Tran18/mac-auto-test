{"name": "test_recruitment_navigation", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n0   chromedriver                        0x000000010250cea4 cxxbridge1$str$ptr + 2722840\n1   chromedriver                        0x0000000102504dac cxxbridge1$str$ptr + 2689824\n2   chromedriver                        0x00000001020563ec cxxbridge1$string$len + 90648\n3   chromedriver                        0x000000010209d544 cxxbridge1$string$len + 381808\n4   chromedriver                        0x00000001020de934 cxxbridge1$string$len + 649056\n5   chromedriver                        0x0000000102091834 cxxbridge1$string$len + 333408\n6   chromedriver                        0x00000001024cffc0 cxxbridge1$str$ptr + 2473268\n7   chromedriver                        0x00000001024d322c cxxbridge1$str$ptr + 2486176\n8   chromedriver                        0x00000001024b1a08 cxxbridge1$str$ptr + 2348924\n9   chromedriver                        0x00000001024d3ae8 cxxbridge1$str$ptr + 2488412\n10  chromedriver                        0x00000001024a2a98 cxxbridge1$str$ptr + 2287628\n11  chromedriver                        0x00000001024f39d8 cxxbridge1$str$ptr + 2619212\n12  chromedriver                        0x00000001024f3b64 cxxbridge1$str$ptr + 2619608\n13  chromedriver                        0x00000001025049e8 cxxbridge1$str$ptr + 2688860\n14  libsystem_pthread.dylib             0x0000000191cd2f94 _pthread_start + 136\n15  libsystem_pthread.dylib             0x0000000191ccdd34 thread_start + 8", "trace": "self = <tests.test_vacancies.TestVacancies object at 0x105f3e990>\n\n    @allure.story(\"Add Vacancy Test\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_recruitment_navigation(self):\n        login_page = LoginPage(self.driver)\n        login_page.login(*ConfigReader.get_username_password())\n    \n        vacancies_page = VacanciesPage(self.driver)  # truyền driver từ BaseTest\n        vacancies_page.navigate_to_recruitment()  # gọi hàm để test navigation\n        vacancies_page.navigate_to_vacancies()\n        vacancies_page.click_add_button()\n    \n        vacancy_data = ConfigReader.get_vacancy_info()\n        vacancies_page.add_vacancy(vacancy_data)\n    \n        # toast_text = vacancies_page.is_vacancy_added_successfully()\n        # assert toast_text == \"Successfully Saved\"\n    \n>       vacancies_page.navigate_to_edit_vacancy()\n\nAutomation/root/tests/test_vacancies.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nAutomation/root/pages/vacancies_page.py:135: in navigate_to_edit_vacancy\n    edit_btn = WebDriverWait(self.driver, self.timeout).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"b1b3d71d459d692d03d617299019931e\")>\nmethod = <function VacanciesPage.navigate_to_edit_vacancy.<locals>.<lambda> at 0x10693fc40>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       0   chromedriver                        0x000000010250cea4 cxxbridge1$str$ptr + 2722840\nE       1   chromedriver                        0x0000000102504dac cxxbridge1$str$ptr + 2689824\nE       2   chromedriver                        0x00000001020563ec cxxbridge1$string$len + 90648\nE       3   chromedriver                        0x000000010209d544 cxxbridge1$string$len + 381808\nE       4   chromedriver                        0x00000001020de934 cxxbridge1$string$len + 649056\nE       5   chromedriver                        0x0000000102091834 cxxbridge1$string$len + 333408\nE       6   chromedriver                        0x00000001024cffc0 cxxbridge1$str$ptr + 2473268\nE       7   chromedriver                        0x00000001024d322c cxxbridge1$str$ptr + 2486176\nE       8   chromedriver                        0x00000001024b1a08 cxxbridge1$str$ptr + 2348924\nE       9   chromedriver                        0x00000001024d3ae8 cxxbridge1$str$ptr + 2488412\nE       10  chromedriver                        0x00000001024a2a98 cxxbridge1$str$ptr + 2287628\nE       11  chromedriver                        0x00000001024f39d8 cxxbridge1$str$ptr + 2619212\nE       12  chromedriver                        0x00000001024f3b64 cxxbridge1$str$ptr + 2619608\nE       13  chromedriver                        0x00000001025049e8 cxxbridge1$str$ptr + 2688860\nE       14  libsystem_pthread.dylib             0x0000000191cd2f94 _pthread_start + 136\nE       15  libsystem_pthread.dylib             0x0000000191ccdd34 thread_start + 8\n\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException"}, "attachments": [{"name": "stdout", "source": "a6988dd7-a140-4b32-8195-6b4bd40af397-attachment.txt", "type": "text/plain"}], "start": 1751974525940, "stop": 1751974574644, "uuid": "79b63748-61cf-4be6-b9b4-274609cf46a7", "historyId": "ead1b3a2de56c00875ee5ee0566f83c1", "testCaseId": "ead1b3a2de56c00875ee5ee0566f83c1", "fullName": "Automation.root.tests.test_vacancies.TestVacancies#test_recruitment_navigation", "labels": [{"name": "story", "value": "Add Vacancy Test"}, {"name": "severity", "value": "critical"}, {"name": "parentSuite", "value": "Automation.root.tests"}, {"name": "suite", "value": "test_vacancies"}, {"name": "subSuite", "value": "TestVacancies"}, {"name": "host", "value": "Ashleys-MacBook-Pro.local"}, {"name": "thread", "value": "1695-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Automation.root.tests.test_vacancies"}]}